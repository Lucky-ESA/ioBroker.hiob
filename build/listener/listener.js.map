{
  "version": 3,
  "sources": ["../../src/listener/listener.ts"],
  "sourcesContent": ["import EventEmitter from \"events\";\nimport { SamartHomeHandyBis } from \"../main\";\nimport { StateChangedDataPack } from \"../server/datapacks\";\n\nexport enum Events {\n    StateChange = \"stateChanged\",\n}\n// eslint-disable-next-line no-unused-vars\nexport class Listener extends EventEmitter {\n    adapter;\n    constructor(adapter: SamartHomeHandyBis) {\n        super();\n        this.adapter = adapter;\n    }\n\n    onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n        if (state != null) {\n            // The state was changed\n            //this.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n            //Check if notification\n            if (!id.startsWith(\"hiob.\")) {\n                if (this.adapter.valueDatapoints[id] == null) {\n                    this.adapter.valueDatapoints[id] = {};\n                }\n                this.adapter.valueDatapoints[id].val = state.val;\n                this.adapter.valueDatapoints[id].ack = state.ack;\n                this.adapter.server?.broadcastMsg(new StateChangedDataPack(id, state.val, state.ack).toJSON(), false);\n            }\n            this.emit(Events.StateChange, new StateChangeEvent(id, state.val, state.ack));\n        } else {\n            this.emit(\"stateDeleted\", new StateChangeEvent(id, null, null));\n            this.adapter.log.info(`state ${id} deleted`);\n        }\n    }\n}\n\nexport class StateChangeEvent {\n    objectID: string;\n    value: any;\n    ack: any;\n    constructor(\n        objectID: string,\n        value: string | number | boolean | undefined | null,\n        ack: boolean | undefined | null,\n    ) {\n        this.objectID = objectID;\n        this.value = value;\n        this.ack = ack;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB;AAEzB,uBAAqC;AAE9B,IAAK,SAAL,kBAAKA,YAAL;AACH,EAAAA,QAAA,iBAAc;AADN,SAAAA;AAAA,GAAA;AAIL,MAAM,iBAAiB,cAAAC,QAAa;AAAA,EAEvC,YAAY,SAA6B;AACrC,UAAM;AACN,SAAK,UAAU;AAAA,EACnB;AAAA,EAEA,cAAc,IAAY,OAAgD;AAf9E;AAgBQ,QAAI,SAAS,MAAM;AAIf,UAAI,CAAC,GAAG,WAAW,OAAO,GAAG;AACzB,YAAI,KAAK,QAAQ,gBAAgB,OAAO,MAAM;AAC1C,eAAK,QAAQ,gBAAgB,MAAM,CAAC;AAAA,QACxC;AACA,aAAK,QAAQ,gBAAgB,IAAI,MAAM,MAAM;AAC7C,aAAK,QAAQ,gBAAgB,IAAI,MAAM,MAAM;AAC7C,mBAAK,QAAQ,WAAb,mBAAqB,aAAa,IAAI,sCAAqB,IAAI,MAAM,KAAK,MAAM,GAAG,EAAE,OAAO,GAAG;AAAA,MACnG;AACA,WAAK,KAAK,kCAAoB,IAAI,iBAAiB,IAAI,MAAM,KAAK,MAAM,GAAG,CAAC;AAAA,IAChF,OAAO;AACH,WAAK,KAAK,gBAAgB,IAAI,iBAAiB,IAAI,MAAM,IAAI,CAAC;AAC9D,WAAK,QAAQ,IAAI,KAAK,SAAS,YAAY;AAAA,IAC/C;AAAA,EACJ;AACJ;AAEO,MAAM,iBAAiB;AAAA,EAI1B,YACI,UACA,OACA,KACF;AACE,SAAK,WAAW;AAChB,SAAK,QAAQ;AACb,SAAK,MAAM;AAAA,EACf;AACJ;",
  "names": ["Events", "EventEmitter"]
}
