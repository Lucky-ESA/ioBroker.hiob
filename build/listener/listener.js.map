{
  "version": 3,
  "sources": ["../../src/listener/listener.ts"],
  "sourcesContent": ["\"use strict\";\n\nimport EventEmitter from \"events\";\nimport { SamartHomeHandyBis } from \"../main\";\nimport { StateChangedDataPack } from \"../server/datapacks\";\n\nexport enum Events {\n    StateChange = \"stateChanged\",\n}\n// eslint-disable-next-line no-unused-vars\nexport class Listener extends EventEmitter {\n\n\tadapter\n\tconstructor(adapter: SamartHomeHandyBis) {\n\t\tsuper();\n\t\tthis.adapter = adapter;\n\t}\n\n\n\n\tonStateChange(id: string, state: ioBroker.State | null | undefined) : void {\n\t\tif (state != null) {\n\t\t\t// The state was changed\n\t\t\t//this.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t\t//Check if notification\n\t\t\tthis.adapter.server?.broadcastMsg(new StateChangedDataPack(id, state.val).toJSON(), false);\n\t\t\tthis.emit(Events.StateChange, new StateChangeEvent(id, state.val));\n\t\t} else {\n\t\t\tthis.emit(\"stateDeleted\", new StateChangeEvent(id, null));\n\t\t\tthis.adapter.log.info(`state ${id} deleted`);\n\t\t}\n\t}\n}\n\nexport class StateChangeEvent {\n    objectID: string\n    value: any\n\tconstructor(objectID: string, value: string | number | boolean | undefined| null) {\n\t\tthis.objectID = objectID;\n\t\tthis.value = value;\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAyB;AAEzB,uBAAqC;AAE9B,IAAK,SAAL,kBAAKA,YAAL;AACH,EAAAA,QAAA,iBAAc;AADN,SAAAA;AAAA,GAAA;AAIL,MAAM,iBAAiB,cAAAC,QAAa;AAAA,EAG1C,YAAY,SAA6B;AACxC,UAAM;AACN,SAAK,UAAU;AAAA,EAChB;AAAA,EAIA,cAAc,IAAY,OAAiD;AApB5E;AAqBE,QAAI,SAAS,MAAM;AAIlB,iBAAK,QAAQ,WAAb,mBAAqB,aAAa,IAAI,sCAAqB,IAAI,MAAM,GAAG,EAAE,OAAO,GAAG;AACpF,WAAK,KAAK,kCAAoB,IAAI,iBAAiB,IAAI,MAAM,GAAG,CAAC;AAAA,IAClE,OAAO;AACN,WAAK,KAAK,gBAAgB,IAAI,iBAAiB,IAAI,IAAI,CAAC;AACxD,WAAK,QAAQ,IAAI,KAAK,SAAS,YAAY;AAAA,IAC5C;AAAA,EACD;AACD;AAEO,MAAM,iBAAiB;AAAA,EAG7B,YAAY,UAAkB,OAAoD;AACjF,SAAK,WAAW;AAChB,SAAK,QAAQ;AAAA,EACd;AACD;",
  "names": ["Events", "EventEmitter"]
}
