{
  "version": 3,
  "sources": ["../../src/server/client.ts"],
  "sourcesContent": ["import { IncomingMessage } from \"http\";\nimport { WebSocket } from \"ws\";\nimport { SamartHomeHandyBis } from \"../main\";\nimport { Server } from \"./server\";\nimport {\n    EnumUpdatePack,\n    EnumUpdateRequestPack,\n    GetTemplateSettingPack,\n    RequestLoginPacket,\n    StateChangeRequestPack,\n    SubscribeToDataPointsHistory,\n    SubscribeToDataPointsPack,\n    TemplateSettingCreatePack,\n    TemplateSettingUploadPack,\n    TemplateSettingUploadSuccessPack,\n    TemplateSettingsRequestedPack,\n    NotificationPack\n} from \"./datapacks\";\nimport { TemplateSettings } from \"../template/template_manager\";\n\nexport class Client {\n    socket;\n    server;\n    isConnected;\n    req;\n    adapter;\n    approved;\n    onlySendNotification: boolean = false;\n    id?: string\n    name?: string\n    constructor(socket: WebSocket, server: Server, req: IncomingMessage, adapter: SamartHomeHandyBis) {\n        this.socket = socket;\n        this.server = server;\n        this.req = req;\n        this.isConnected = true;\n        this.adapter = adapter;\n        this.approved = false;\n        socket.on(\"message\", this.onData.bind(this));\n        socket.on(\"close\", this.onEnd.bind(this));\n        socket.onerror = this.onError.bind(this);\n    }\n\n    close(): void {\n        this.socket.pause();\n    }\n\n    sendMSG(msg: string, needAproval: boolean = false): boolean {\n        if (needAproval && !this.approved) {\n            this.adapter.log.debug(\"The Client was not approved to get a msg (\" + msg + + \")\" +  needAproval)\n            return false\n        }\n        this.socket.send(msg)\n        this.adapter.log.debug(\"Send MSG( \" + msg + \")\" + \" to Client(\" + this.toString() + \")\")\n        return false\n    }\n\n\n    onData(data: string): void {\n        try {\n            const map = JSON.parse(data);\n            const content = map[\"content\"] ?? {};\n            this.adapter.log.debug(\"Client(\" + this.toString() + \") sended msg: \" + data + \"type: \" + map[\"type\"]);\n            switch (map[\"type\"]) {\n                case \"iobStateChangeRequest\":\n                    if (this.approved)\n                        this.onStateChangeRequest(new StateChangeRequestPack(content[\"stateID\"], content[\"value\"]));\n                    break;\n                case \"enumUpdateRequest\": //Enum update Request\n                    if (this.approved)\n                        this.onEnumUpdateRequest(new EnumUpdateRequestPack(content[\"id\"]));\n                    break;\n                case \"subscribeToDataPoints\":\n                    if (this.approved)\n                        this.onSubscribeToDataPoints(new SubscribeToDataPointsPack(content[\"dataPoints\"]));\n                    break;\n                case \"subscribeHistory\":\n                    if (this.approved)\n                        this.onSubscribeToHistory(new SubscribeToDataPointsHistory(content[\"dataPoint\"], content[\"end\"], content[\"start\"], content[\"interval\"]));\n                    //TODO:\n                    break;\n                case \"requestLogin\":\n                    this.onLoginRequest(new RequestLoginPacket(content[\"deviceName\"], content[\"deviceID\"], content[\"key\"], content[\"user\"], content[\"password\"]));\n                    break;\n                case \"templateSettingCreate\":\n                    this.adapter.log.debug((content[\"name\"]));\n                    this.onTemplateSettingCreate(new TemplateSettingCreatePack(content[\"name\"]));\n                    break;\n                case \"requestTemplatesSettings\":\n                    this.adapter.log.debug(\"requestTemplatesSettings\");\n                    this.onTemplateSettingsRequest();\n                    break;\n                case \"uploadTemplateSetting\":\n                    this.adapter.log.debug(\"uploadTemplateSetting\");\n                    this.onTemplateUpload(new TemplateSettingUploadPack(content[\"name\"], content[\"devices\"], content[\"screens\"], content[\"widgets\"]));\n                    break;\n\n                case \"getTemplatesSetting\":\n                    this.adapter.log.debug(\"getTemplatesSetting\");\n                    this.getTemplatesSetting(content[\"name\"], content[\"device\"], content[\"screen\"], content[\"widget\"]);\n                    break;\n                case \"notification\":\n                    this.onNotification(new NotificationPack(content[\"onlySendNotification\"], content[\"content\"], content[\"date\"]))\n                    break;\n\n            }\n\n        } catch (e) {\n            if (e instanceof SyntaxError) {\n                this.adapter.log.error(\"There is something wrong with the sent data: No valid JSON Format\")\n            }\n\n        }\n\n\n    }\n\n\n    onApprove(): void {\n        this.approved = true;\n    }\n\n    filter(value: Client): boolean {\n        return value.isConnected == true;\n    }\n\n    onEnd(): void {\n        this.setConnection();\n        this.isConnected = false;\n        this.adapter.log.debug(\"Closed connection to Client(\" + this.toString() + \")\");\n        this.server.conClients = this.server.conClients.filter(this.filter.bind(this));\n        this.adapter.log.debug(\"Size: \" + this.server.conClients.length.toString());\n    }\n    onError(): void {\n        this.setConnection();\n        this.isConnected = false;\n        this.adapter.log.debug(\"Closed connection to Client(\" + this.toString() + \")\");\n    }\n\n    setConnection(): void {\n        //TODO\n        // this.adapter.loginManager.pendingClients = this.adapter.loginManager.pendingClients.filter((e) => e.deviceID != this.deviceID);\n        // this.adapter.loginManager.loginedClients = this.adapter.loginManager.loginedClients.filter((e) => e.deviceID != this.deviceID);\n        // this.adapter.setStateAsync(\"devices.\" + this.deviceID + \".connected\", false, true);\n    }\n\n\n    onStateChangeRequest(request: StateChangeRequestPack): void {\n        this.adapter.setForeignState(request.objectID, request.newValue, false);\n    }\n\n    async onEnumUpdateRequest(request: EnumUpdateRequestPack): Promise<void> {\n        const result = await this.adapter.getEnumListJSON(request.id);\n        this.sendMSG(new EnumUpdatePack(request.id, result).toJSON(), true);\n\n    }\n\n\n    onSubscribeToDataPoints(sub: SubscribeToDataPointsPack): void {\n        this.adapter.subscribeToDataPoints(sub.dataPoints, this);\n    }\n\n    onSubscribeToHistory(sub: SubscribeToDataPointsHistory): void {\n        // this.adapter.historyManager.subscribeToHistory(sub.dataPoint, sub.start, sub.end, this, sub.minInterval);\n    }\n\n    onLoginRequest(requestLoginPacket: RequestLoginPacket): void {\n        this.adapter.loginManager.onLoginRequest(this,requestLoginPacket);\n\n    }\n\n    async onTemplateSettingsRequest(): Promise<void> {\n        const list = await this.adapter.templateManager.fetchTemplateSettings();\n        this.sendMSG(new TemplateSettingsRequestedPack(list).toJSON(), true);\n\n    }\n\n    async onTemplateSettingCreate(templateSettingCreatePack: TemplateSettingCreatePack): Promise<void> {\n        //TODO:\n        this.adapter.log.debug(\"OnTemplateSettingCreate: \" + templateSettingCreatePack.name);\n        await this.adapter.templateManager.createNewTemplateSetting(new TemplateSettings(templateSettingCreatePack.name), this);\n        this.sendMSG(new TemplateSettingCreatePack(templateSettingCreatePack.name).toJSON(), true);\n    }\n\n    async onTemplateUpload(uploadTemplateSettingPack: any): Promise<void> {\n        await this.adapter.templateManager.uploadTemplateSetting(uploadTemplateSettingPack.name, uploadTemplateSettingPack.devices, uploadTemplateSettingPack.screens, uploadTemplateSettingPack.widgets, this);\n        this.sendMSG(new TemplateSettingUploadSuccessPack().toJSON(), true);\n    }\n\n    async getTemplatesSetting(name: any, device: any, screen: any, widget: any): Promise<void> {\n        this.adapter.log.debug(\"NAME: \" + name);\n        const map = await this.adapter.templateManager.getTemplateSettings(name);\n        this.sendMSG(new GetTemplateSettingPack(device ? map[\"devices\"]: null, screen ? map[\"screens\"]: null, widget ? map[\"widgets\"] : null).toJSON(), true);\n\n    }\n\n    onNotification(pack: NotificationPack) {\n        if(pack.onlySendNotification != undefined) {\n            this.onlySendNotification = pack.onlySendNotification;\n        }\n\n    }\n\n\n    toString(): string {\n        return this.req.socket.address() + \":\" + this.req.socket.remotePort\n    }\n\n}\n\n\n\n\n"],
  "mappings": "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",
  "names": []
}
