{
  "version": 3,
  "sources": ["../../src/server/datapacks.ts"],
  "sourcesContent": ["class DataPack {\n    type: string;\n    constructor(type: string) {\n        this.type = type;\n    }\n\n    toJSON() : string {return \"\"}\n}\nexport class StateChangeRequestPack extends DataPack {\n    objectID;\n    newValue : any;\n    constructor(objectID: string, newValue: any) {\n        super(\"iobStateChangeRequest\");\n        this.objectID = objectID;\n        this.newValue = newValue;\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n            \"objectID\": this.objectID,\n            \"newValue\": this.newValue,\n        };\n        return JSON.stringify(map).toString();\n    }\n\n}\n\nexport class StateChangedDataPack extends DataPack {\n    objectID\n    value\n    constructor(objectID: string, value: any) {\n        super(\"iobStateChanged\")\n        this.objectID = objectID;\n        this.value = value;\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n            \"objectID\": this.objectID,\n            \"value\": this.value,\n        };\n        return JSON.stringify(map).toString();\n    }\n\n}\n\nexport class EnumUpdateRequestPack extends DataPack {\n\n    id: string\n    constructor(id: string) {\n        super(\"enumUpdateRequest\");\n        this.id = id;\n    }\n\n}\n\nexport class EnumUpdatePack extends DataPack {\n\n    id: string\n    enumsJSON: any\n    constructor(id: string, enumsJSON: any) {\n        super(\"enumUpdate\");\n        this.id = id;\n        this.enumsJSON = enumsJSON;\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n            \"enums\": this.enumsJSON,\n        };\n        return JSON.stringify(map).toString();\n    }\n\n}\n\nexport class FirstPingPack extends DataPack {\n\n\n    constructor() {\n        super(\"firstPingFromIob2\");\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n        };\n        return JSON.stringify(map).toString();\n    }\n\n}\n\nexport class RequestLoginPacket extends DataPack {\n    deviceName: string;\n    deviceID: string\n    key: string\n    user: string\n    password: string\n    constructor(deviceName: string, deviceID: string, key: string, user: string, password: string ) {\n        super(\"requestLogin\");\n        this.deviceName = deviceName;\n        this.deviceID = deviceID;\n        this.key = key;\n        this.user = user;\n        this.password = password;\n    }\n}\n\nexport class LoginAnswer extends DataPack {\n    key\n    suc\n    constructor(key: string, suc: boolean)  {\n        super(\"answerLogin\");\n        this.key = key;\n        this.suc = suc;\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n            \"key\": this.key,\n            \"suc\": this.suc\n        };\n        return JSON.stringify(map).toString();\n    }\n}\n\nexport class SubscribeToDataPointsPack extends DataPack {\n\n\n    dataPoints\n    constructor(dataPoints: any ) {\n        super(\"subscribeToDataPoints\");\n        this.dataPoints = dataPoints;\n    }\n\n}\n\nexport class SubscribeToDataPointsHistory extends DataPack {\n\n\n    dataPoint\n    end\n    start\n    minInterval\n    constructor(dataPoint: any, end: any, start: any, minInterval: any) {\n        super(\"subscribeHistory\");\n        this.dataPoint = dataPoint;\n        this.end = end;\n        this.start = start;\n        this.minInterval = minInterval;\n    }\n\n}\n\nexport class LoginKeyPacket extends DataPack {\n    key\n    constructor(key: string) {\n        super(\"loginKey\");\n        this.key = key;\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n            \"key\": this.key,\n        };\n        return JSON.stringify(map).toString();\n    }\n}\n\nexport class LoginApprovedPacket extends DataPack {\n    constructor() {\n        super(\"loginApproved\");\n    }\n\n    toJSON() : string{\n        const map = {\n            \"type\": this.type,\n        };\n        return JSON.stringify(map).toString();\n    }\n}\n\n\nexport class LoginDeclinedPacket extends DataPack {\n    constructor() {\n        super(\"loginDeclined\");\n    }\n\n\n    toJSON() : string{\n        const map = {\n            \"type\": this.type,\n        };\n        return JSON.stringify(map).toString();\n    }\n}\n\nexport class TemplateSettingCreatePack extends DataPack {\n    name\n    constructor(name: any) {\n        super(\"templateSettingCreate\");\n        this.name = name;\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n        };\n        return JSON.stringify(map).toString();\n    }\n\n}\n\nexport class TemplateSettingsRequestedPack extends DataPack {\n    list\n    constructor(list : string[]) {\n        super(\"requestTemplatesSettings\");\n        this.list = list;\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n            \"settings\": this.list,\n        };\n        return JSON.stringify(map).toString();\n    }\n\n}\n\nexport class TemplateSettingUploadPack extends DataPack {\n    name\n    devices\n    screens\n    widgets\n    constructor(name: any, devices: any, screens: any, widgets: any) {\n        super(\"uploadTemplateSetting\");\n        this.name = name;\n        this.devices = devices;\n        this.screens = screens;\n        this.widgets = widgets;\n    }\n\n\n}\n\nexport class TemplateSettingUploadSuccessPack extends DataPack {\n\n    constructor() {\n        super(\"uploadTemplateSettingSuccess\");\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n        };\n        return JSON.stringify(map).toString();\n    }\n\n\n}\n\nexport class GetTemplateSettingPack extends DataPack {\n\n    devices\n    screens\n    widgets\n\n    constructor(devices : any, screens: any, widgets : any) {\n        super(\"getTemplatesSetting\");\n        this.devices = devices;\n        this.screens = screens;\n        this.widgets = widgets;\n    }\n\n    toJSON() : string {\n        const map = {\n            \"type\": this.type,\n            \"screens\": this.screens,\n            \"widg\": this.widgets,\n            \"devices\": this.devices,\n        };\n        return JSON.stringify(map).toString();\n    }\n\n\n}"],
  "mappings": "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",
  "names": []
}
